#summary REPK manual


=REPK Manual=

repk written by Gabrielle Rocap and Eric Collins (rec3141.at.gmail.com)

==OVERVIEW==

REPK (*R*estriction *E*ndonuclease *P*ic*k*er) finds sets of 4 commercially available restriction endonucleases which together uniquely differentiate user-designated sequence groups from a user-supplied FASTA format sequence file.  The user-defined sequences groups allow the user to determine particular groups (e.g. taxonomic) of sequences to be differentiated by the program.  REPK is thus particularly useful in the case where a microbial community has been characterized by clone library analysis, as the actual sequences can be input into the program.  In this regard, shoving the entire RDP database through this program will a) certainly not work and b) be a waste of time -- to look at a very large community just use some common tetrameric restriction enzymes (e.g. see Engelbretson and Moyer, 2003).  However, if you have a database of known sequences from an environment, this program could be useful to pick some enzymes that uniquely discriminate the different groups in your database.

==INPUTS==
===1. Multiple sequence alignment in FASTA format.===
All sequences should begin at the 5' end of your LABELED primer and end at the 3' end of your UNLABELED primer.  The sequences should have no gaps and have no whitespace in the taxa names. Unknown/bad sequence data should be replaced by X's or N's, and these areas should make up a small part of the sequences because they might have restriction sites that will be missed by this program.

  * Sequence groups are coded as characters of the taxa name and separated by a delimiter, and each sequence can have multiple delimiters.

An example file might look like this:

{{{
>ALF_Roseobacter__Hyphomonas_jannaschiana;AJ227814
XXXXXXXXXXXXXXXXXXXXXACGAACGCTGGCGGCAGGCCTAACACATGCAAGTCGAAC
GACATAGTGGCAGACGGGTGAGTAACGCGTGGGAACGTACCTTTCGCTACGGAATAGCTC
>ALF_Roseobacter__marine_alpha_proteobacterium_AS-26;AJ391187
XXXXXXXXXXXXXXXXXXXXXACGAACGCTGGCGGCAGGCCTAACACATGCAAGTCGAGC
GCACTCTTCGGAGTGAGCGGCGGACGGGTTAGTAACGCGTGGGAACATACCCTTTTCTAC
.
.
.
}}}


==OPTIONS==
===1. Restriction endonucleases and cut sites===
For now only the list from [http://rebase.neb.com/rebase/rebase.html REBASE] is available.  Future possibilities will include user-defined and user-selected enzymes.

===2. Group Subset Delimiter===
the character used to separate groups in your FASTA sequence names

===3. Group Subset===
which group subset do you want separated out?

===4. Cutoff===
furthest apart two fragments can be in length and still be considered the same fragments
This is the furthest apart (in basepairs) that two fragments can be in length and still be considered the same fragment length. This should be set considering such things as the amount of known variation in the sequences and the recognition site bug mentioned above.

===5. Stringency===
an enzyme must distinguish MORE than this percent of groups to be acceptable (bug fixed)
This is the fraction of groups an enzyme must distinguish MORE than to be acceptable. It is useful to increase this number (up to 1.0) if you get a lot of hits and the program takes a long time to execute.


===6. Min/Max Fragment Lengths===
shortest acceptable fragment (must be greater than Cutoff)
These are the shortest and longest fragment lengths that are acceptable. You might change these depending on, for example, how long your PCR product is, how long of a sequence your sequencer can read accurately, the range of fragments that survive the cleanup and the presence of primers and primer dimers. Any fragments longer than this won't be included in the analysis, but will be present in "fragfile.txt" with a NEGATIVE number.

===7. Max Matches Returned===
the most number of matches to print out


==OUTPUTS==

The program makes a new directory for every run and inside the directory makes several files:

    * a copy of the program
    * a copy of the enzyme input file
    * a copy of the sequence input file
    * "enzmatrix.txt" This is the file used by the program to calculate the best enzymes. Each column contains a pair of groups, and each row contains the enzyme name. A zero indicates that the enzyme does not distinguish those groups from each other. A one indicated that the enzyme does distinguish those groups from each other. The $stringency setting specifies the fraction of ones that an enzyme must have to be acceptable.
    * "finalout.txt" This is the final output which shows all of the successful enzyme groups. The upper part ("Enzyme Picker Key") is a key for the lower part. Each numbered group of enzymes distinguishes the same groups of sequences, so they are somewhat equivalent. Note that they do not give the same fragment lengths, they only distinguish the same groups (that is, they have the same pattern of ones and zeros in enzmatrix.txt). This greatly speeds up the calculations. The lower part "Enzyme sets..." has two parts: a score, and a set of enzymes. The score is the sum of the fractions of sequence groups discriminated by all of the enzymes, so a perfect score equals 4. (that is, it equals "the fraction of ones in enzmatrix.txt for Enzyme A" plus "the fraction of ones in enzmatrix.txt for Enzyme B" ... "Enzyme D"). Each enzyme listed is only the first member of the set from the upper part of the file, so choosing any other member of the same group will yield the same discriminatory abilities. Choose your enzyme based upon commercial availability, fragment lengths, etc.
    * "fragfile.txt" This file shows the fragment lengths for each sequence and enzyme combination.
    * "no_cuts.txt" This file lists the enzymes that don't cut/distinguish any of the groups.
    * "success.txt" This file lists the enzymes that singlehandedly distinguish all of the groups.
    * "yes_cuts.txt" These are enzymes that do cut/distinguish the groups with sufficient stringency. Deprecated. Used for debugging.



==REFERENCES==
Cole JR, Chai B, Farris RJ, Wang Q, Kulam SA, McGarrell DM, Garrity GM, Tiedje JM. The Ribosomal Database Project (RDP-II): sequences and tools for high-throughput rRNA analysis. Nucleic Acids Research 2005 Jan 1;33(Database Issue):D294-D296. doi: 10.1093/nar/gki038.

Engebretson JJ, Moyer CL (2003) Fidelity of select restriction endonucleases in determining microbial diversity by terminal-restriction fragment length polymorphism.  Applied and Environmental Microbiology 69:4823-4829.

Ludwig W, Strunk O, Westram R, Richter L, Meier H, Yadhu K, et al. (2004) ARB: a software environment for sequence data.  Nucleic Acids Research 32:1363â€“1371.

Marsh TL, Saxman P, Cole J, Tiedje J (2000) Terminal restriction fragment length polymorphism analysis program, a web-based research tool for microbial community analysis.

Ricke P, Kolb S, Braker G (2005) Application of a newly developed ARB software-integrated tool for in silico terminal restriction fragment length polymorphism analysis reveals the dominance of a novel pmoA cluster in a forest soil.  Applied and Environmental Microbiology 71:1671-1673.

Roberts RJ, Vincze T, Posfai J, Macelis D (2005) REBASE Restriction enzymes and DNA methyltransferases.  Nucleic Acids Research 33:D230-D232. 











